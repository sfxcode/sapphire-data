import{_ as s,c as a,o as n,a as l}from"./app.fbc4f041.js";const F=JSON.parse('{"title":"Guide","description":"","frontmatter":{"title":"Guide"},"headers":[{"level":2,"title":"Features","slug":"features"},{"level":2,"title":"Example","slug":"example"}],"relativePath":"guide/index.md","lastUpdated":1660861179000}'),p={name:"guide/index.md"},o=l(`<h1 id="data-adapter" tabindex="-1">Data Adapter <a class="header-anchor" href="#data-adapter" aria-hidden="true">#</a></h1><p>DataAdapter is one of the core concepts of this framework. It is an adapter for Java/Scala Beans and Maps.</p><h2 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-hidden="true">#</a></h2><ul><li>Every Java / Scala Bean can be used for DataAdapter</li><li>Bean member value lookup by java reflection</li><li>DataAdapter has additional support for Java / Scala Maps</li><li>DataAdapter can resolve Expressions on bean</li><li>DataAdapter has change management by default</li><li>DataAdapter implements java.util.Interface =&gt; Scala classes and maps can be used like java maps</li></ul><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-hidden="true">#</a></h2><div class="language-scala"><button class="copy"></button><span class="lang">scala</span><pre><code><span class="line"></span>
<span class="line"><span style="color:#F78C6C;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">com</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">sfxcode</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">sapphire</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">data</span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">DataAdapter</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">case</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Author</span><span style="color:#A6ACCD;">(</span><span style="color:#A6ACCD;">name</span><span style="color:#A6ACCD;">: </span><span style="color:#FFCB6B;">String</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;">case</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Book</span><span style="color:#A6ACCD;">(</span><span style="color:#A6ACCD;">id</span><span style="color:#A6ACCD;">: </span><span style="color:#FFCB6B;">Long</span><span style="color:#A6ACCD;">, </span><span style="color:#A6ACCD;">title</span><span style="color:#A6ACCD;">: </span><span style="color:#FFCB6B;">String</span><span style="color:#A6ACCD;">, </span><span style="color:#A6ACCD;">pages</span><span style="color:#A6ACCD;">: </span><span style="color:#FFCB6B;">Int</span><span style="color:#A6ACCD;">, </span><span style="color:#A6ACCD;">author</span><span style="color:#A6ACCD;">: </span><span style="color:#FFCB6B;">Author</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// create DataAdapter for sample case class</span></span>
<span class="line"><span style="color:#89DDFF;">val</span><span style="color:#A6ACCD;"> scalaBook </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Book</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Programming In Scala</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">852</span><span style="color:#A6ACCD;">, </span><span style="color:#FFCB6B;">Author</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Martin Odersky</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"><span style="color:#89DDFF;">val</span><span style="color:#A6ACCD;"> book </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">DataAdapter</span><span style="color:#A6ACCD;">[</span><span style="color:#FFCB6B;">Book</span><span style="color:#A6ACCD;">](scalaBook)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// value(key) and updateValue(key, newValue) are used for bean property access and modification</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">val</span><span style="color:#A6ACCD;"> title </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> book.value(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">title</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#676E95;">// &quot;Programming In Scala&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">val</span><span style="color:#A6ACCD;"> titleString</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">String</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> book.stringValue(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">title</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">book.updateValue(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">title</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Programming In Scala 3.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#676E95;">// title is updated</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">val</span><span style="color:#A6ACCD;"> newTitle </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> book.value(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">title</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#676E95;">// &quot;Programming In Scala 3.0&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// getValue and updateValue for underlying class by dot syntax</span></span>
<span class="line"><span style="color:#89DDFF;">val</span><span style="color:#A6ACCD;"> authorName </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> book.value(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">author.name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)  </span><span style="color:#676E95;">// &quot;Martin Odersky&quot;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span></code></pre></div>`,6),e=[o];function t(r,c,D,y,C,A){return n(),a("div",null,e)}const d=s(p,[["render",t]]);export{F as __pageData,d as default};
